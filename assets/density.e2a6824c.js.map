{"version":3,"file":"density.e2a6824c.js","sources":["../../../../node_modules/vuetify/lib/composables/rounded.mjs","../../../../node_modules/vuetify/lib/composables/density.mjs"],"sourcesContent":["// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined\n  }\n}, 'rounded');\nexport function useRounded(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded;\n    const classes = [];\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`);\n    } else if (typeof rounded === 'string' || rounded === 0) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`);\n      }\n    }\n    return classes;\n  });\n  return {\n    roundedClasses\n  };\n}\n//# sourceMappingURL=rounded.mjs.map","// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nconst allowedDensities = [null, 'default', 'comfortable', 'compact'];\n\n// typeof allowedDensities[number] evalutes to any\n// when generating api types for whatever reason.\n\n// Composables\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  }\n}, 'density');\nexport function useDensity(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`;\n  });\n  return {\n    densityClasses\n  };\n}\n//# sourceMappingURL=density.mjs.map"],"names":["makeRoundedProps","propsFactory","useRounded","props","name","getCurrentInstanceName","computed","rounded","isRef","classes","value","__name","allowedDensities","makeDensityProps","v","useDensity"],"mappings":"2LAIY,MAACA,EAAmBC,EAAa,CAC3C,QAAS,CACP,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,MACV,CACH,EAAG,SAAS,EACL,SAASC,EAAWC,EAAO,CAChC,IAAIC,EAAO,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAKC,EAAsB,EAarG,MAAO,CACL,eAbqBC,EAAS,IAAM,CACpC,MAAMC,EAAUC,EAAML,CAAK,EAAIA,EAAM,MAAQA,EAAM,QAC7CM,EAAU,CAAA,EAChB,GAAIF,IAAY,IAAQA,IAAY,GAClCE,EAAQ,KAAK,GAAGL,YAAe,UACtB,OAAOG,GAAY,UAAYA,IAAY,EACpD,UAAWG,KAAS,OAAOH,CAAO,EAAE,MAAM,GAAG,EAC3CE,EAAQ,KAAK,WAAWC,GAAO,EAGnC,OAAOD,CACX,CAAG,CAGH,CACA,CAjBgBE,EAAAT,EAAA,cCPhB,MAAMU,EAAmB,CAAC,KAAM,UAAW,cAAe,SAAS,EAMtDC,EAAmBZ,EAAa,CAC3C,QAAS,CACP,KAAM,OACN,QAAS,UACT,UAAWa,GAAKF,EAAiB,SAASE,CAAC,CAC5C,CACH,EAAG,SAAS,EACL,SAASC,EAAWZ,EAAO,CAChC,IAAIC,EAAO,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAKC,EAAsB,EAIrG,MAAO,CACL,eAJqBC,EAAS,IACvB,GAAGF,cAAiBD,EAAM,SAClC,CAGH,CACA,CARgBQ,EAAAI,EAAA"}