{"version":3,"file":"payment.f39e6755.js","sources":["../../src/plugins/payment.ts"],"sourcesContent":["import { createVNode, nextTick, render, getCurrentInstance } from \"vue\";\nimport { genPaymentUrl } from \"@foxone/utils/mixin\";\n\nimport type { App, VNode } from \"vue\";\n\nimport { FPaymentModal } from \"../components\";\n\nexport interface PaymentOptions {\n  assetId: string;\n  amount: string;\n  scheme: string;\n  channel: \"mixin\" | \"fennec\" | \"metamask\" | \"walletconnect\";\n  hideCheckingModal?: boolean;\n  actions: {\n    mixin?: () => void;\n    fennec?: () => Promise<boolean>;\n    mvm?: () => Promise<boolean>;\n  };\n  checker: () => Promise<boolean>;\n}\n\nexport interface MixinPaymentOptions {\n  assetId: string;\n  amount: string;\n  recipient: string;\n  traceId: string;\n  memo: string;\n  hideCheckingModal?: boolean;\n  checker: () => Promise<boolean>;\n}\n\nexport function usePayment() {\n  const instance = getCurrentInstance()!;\n\n  return instance.appContext.config.globalProperties.$uikit.payment;\n}\n\nexport type Keys = \"show\" | \"mixin\";\n\nexport type PaymentMethods = Record<\n  Keys,\n  (options?: PaymentOptions | MixinPaymentOptions) => void\n>;\n\nfunction install(app: App) {\n  let instance: VNode | null = null;\n\n  const show = (options: PaymentOptions) => {\n    if (instance) {\n      instance.component!.exposed!.show(options);\n    }\n\n    nextTick(() => {\n      const appendTo = document.querySelector(\"[data-v-app]\");\n      const container = document.createElement(\"div\");\n      const vnode = createVNode(FPaymentModal, {\n        ...options,\n        attach: container,\n        onDestroy: () => {\n          render(null, container);\n          instance = null;\n          appendTo?.removeChild(container);\n        },\n      });\n\n      vnode.appContext = app._context!;\n      render(vnode, container);\n      appendTo?.appendChild(container);\n      instance = vnode;\n\n      instance.component!.exposed!.show(options);\n    });\n  };\n\n  const mixin = (options: MixinPaymentOptions) => {\n    const scheme = genPaymentUrl(options);\n\n    return show({\n      ...options,\n      channel: \"mixin\",\n      scheme,\n      actions: { mixin: () => (window.location.href = scheme) },\n    });\n  };\n\n  const payment = { show, mixin };\n  const properties = app.config.globalProperties;\n\n  properties.$uikit = properties.$uikit || {};\n  properties.$uikit.payment = payment as PaymentMethods;\n}\n\nexport function Payment() {}\n\nPayment.install = install;\n"],"names":["usePayment","getCurrentInstance","__name","install","app","instance","show","options","nextTick","appendTo","container","vnode","createVNode","FPaymentModal","render","payment","scheme","genPaymentUrl","properties","Payment"],"mappings":"qqCA+BO,SAASA,GAAa,CAG3B,OAFiBC,IAED,WAAW,OAAO,iBAAiB,OAAO,OAC5D,CAJgBC,EAAAF,EAAA,cAahB,SAASG,EAAQC,EAAU,CACzB,IAAIC,EAAyB,KAEvB,MAAAC,EAAOJ,EAACK,GAA4B,CACpCF,GACOA,EAAA,UAAW,QAAS,KAAKE,CAAO,EAG3CC,EAAS,IAAM,CACP,MAAAC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,KAAK,EACxCC,EAAQC,EAAYC,EAAe,CACvC,GAAGN,EACH,OAAQG,EACR,UAAW,IAAM,CACfI,EAAO,KAAMJ,CAAS,EACXL,EAAA,KACXI,GAAA,MAAAA,EAAU,YAAYC,EACxB,CAAA,CACD,EAEDC,EAAM,WAAaP,EAAI,SACvBU,EAAOH,EAAOD,CAAS,EACvBD,GAAA,MAAAA,EAAU,YAAYC,GACXL,EAAAM,EAEFN,EAAA,UAAW,QAAS,KAAKE,CAAO,CAAA,CAC1C,CAAA,EAxBU,QAsCPQ,EAAU,CAAE,KAAAT,EAAM,MAXVJ,EAACK,GAAiC,CACxC,MAAAS,EAASC,EAAcV,CAAO,EAEpC,OAAOD,EAAK,CACV,GAAGC,EACH,QAAS,QACT,OAAAS,EACA,QAAS,CAAE,MAAO,IAAO,OAAO,SAAS,KAAOA,CAAQ,CAAA,CACzD,CAAA,EARW,UAYRE,EAAad,EAAI,OAAO,iBAEnBc,EAAA,OAASA,EAAW,QAAU,CAAA,EACzCA,EAAW,OAAO,QAAUH,CAC9B,CA9CSb,EAAAC,EAAA,WAgDF,SAASgB,GAAU,CAAC,CAAXjB,EAAAiB,EAAA,WAEhBA,EAAQ,QAAUhB"}